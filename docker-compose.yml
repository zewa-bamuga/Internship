version: '3.7'

volumes:
  postgres_data: { }
  fastapi_media: { }

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.http.address=:80"
    ports:
      - "${APP_PORT:-80}:80"
      - "${TRAEFIK_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: "unless-stopped"

  fastapi: &core
    build:
      context: .
      dockerfile: ./deploy/compose/local/fastapi.dockerfile
    volumes:
      - ./src:/src
      - fastapi_media:/media
    environment:
      - MODULE_NAME=app.fastapi
    depends_on:
      - postgres
      - db-init
    command: /start-reload-fastapi.sh
    env_file:
      - .env.example
      - .env
    restart: "unless-stopped"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi_api.rule=PathPrefix(`/api`)"


  db-init:
    <<: *core
    depends_on:
      - postgres
    restart: "no"
    command: /start-db-init.sh

  postgres:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - .env.example
      - .env
    restart: "unless-stopped"
    ports:
      - "5432:5432"